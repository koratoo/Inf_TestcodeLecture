<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ae75a70a-628e-4773-b5c2-f2eaec16974a" name="Changes" comment="home 테스트 3번째">
      <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$/Inf_TestcodeLecture-main/cafekiosk">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/cafekiosk">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$/cafekiosk">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand />
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
        <option value="JUnit5 Test Class" />
      </list>
    </option>
  </component>
  <component name="Git.Rebase.Settings">
    <option name="NEW_BASE" value="main" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="JpbToolWindowState">
    <option name="myId2FirstActivated">
      <map>
        <entry key="com.haulmont.jpb.jpaStructure" value="true" />
      </map>
    </option>
    <option name="myId2Visible">
      <map>
        <entry key="com.haulmont.jpb.jpaStructure" value="false" />
      </map>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 3
}]]></component>
  <component name="ProjectId" id="2Wdl4clS5n6FcQDou0S2Olh4e7N" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "android.gradle.sync.needed": "true",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "C:/Inflearn/workspace/cafekiosk",
    "settings.editor.selected.configurable": "preferences.pluginManager"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="sample.unit.beverage" />
      <recent name="sample.unit" />
    </key>
  </component>
  <component name="RunManager" selected="Gradle.CafeKioskTest.calculateTotalPrice">
    <configuration name="CafeKioskTest.addZeroBeverages" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/cafekiosk" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;sample.unit.CafeKioskTest.addZeroBeverages&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="CafeKioskTest.calculateTotalPrice" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/cafekiosk" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;sample.unit.CafeKioskTest.calculateTotalPrice&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="CafeKioskTest.createOrder" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/cafekiosk" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;sample.unit.CafeKioskTest.createOrder&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="CafeKioskTest.createOrderOutsideOpenTime" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/cafekiosk" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;sample.unit.CafeKioskTest.createOrderOutsideOpenTime&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="CafeKioskTest.createOrderWithCurrentTime" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/cafekiosk" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;sample.unit.CafeKioskTest.createOrderWithCurrentTime&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.CafeKioskTest.calculateTotalPrice" />
        <item itemvalue="Gradle.CafeKioskTest.createOrderOutsideOpenTime" />
        <item itemvalue="Gradle.CafeKioskTest.createOrderWithCurrentTime" />
        <item itemvalue="Gradle.CafeKioskTest.createOrder" />
        <item itemvalue="Gradle.CafeKioskTest.addZeroBeverages" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ae75a70a-628e-4773-b5c2-f2eaec16974a" name="Changes" comment="" />
      <created>1697070147939</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1697070147939</updated>
    </task>
    <task id="LOCAL-00001" summary="start! 카페 키오스크를 통한 테스트 코드 연습">
      <created>1697073646977</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1697073646977</updated>
    </task>
    <task id="LOCAL-00002" summary="단위테스트 / JUnit5로 테스트하기">
      <created>1697087745088</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1697087745088</updated>
    </task>
    <task id="LOCAL-00003" summary="단위테스트 / 테스트 케이스 세분화하기&#10;&#10;테스트 케이스는 경계값을 나눠서 테스트 해야한다.&#10;예를 들어 0~2범위라면 0인 값과 2인값에서 테스트를 하고 예외처리에 대해서도 고민해야 한다. 이번 코드에선 assertThatThrownBy를 써서 예외를 처리했다.">
      <created>1697097473346</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1697097473346</updated>
    </task>
    <task id="LOCAL-00004" summary="단위테스트 / 테스트하기 어려운영역&#10;&#10;1 관측할 때마다 다른 값에 의존하는 코드&#10;현재 날짜/시간, 랜덤 값, 전역 변수/함수, 사용자 입력 등&#10;2 외부 세계에 영향을 주는 코드&#10;표준 출력, 메시지 발송, 데이터베이스에 기록하기 등">
      <created>1697157857893</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1697157857893</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="main" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="start! 카페 키오스크를 통한 테스트 코드 연습" />
    <MESSAGE value="단위테스트 / JUnit5로 테스트하기" />
    <MESSAGE value="단위테스트 / 테스트 케이스 세분화하기&#10;&#10;테스트 케이스는 경계값을 나눠서 테스트 해야한다.&#10;예를 들어 0~2범위라면 0인 값과 2인값에서 테스트를 하고 예외처리에 대해서도 고민해야 한다. 이번 코드에선 assertThatThrownBy를 써서 예외를 처리했다." />
    <MESSAGE value="단위테스트 / 테스트하기 어려운영역&#10;&#10;1 관측할 때마다 다른 값에 의존하는 코드&#10;현재 날짜/시간, 랜덤 값, 전역 변수/함수, 사용자 입력 등&#10;2 외부 세계에 영향을 주는 코드&#10;표준 출력, 메시지 발송, 데이터베이스에 기록하기 등" />
    <MESSAGE value="home 테스트 3번째" />
    <option name="LAST_COMMIT_MESSAGE" value="home 테스트 3번째" />
  </component>
</project>